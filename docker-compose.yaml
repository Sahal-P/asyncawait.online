version: "3"

networks:
  my_network:
    driver: bridge

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/start.sh
    volumes:
      - .:/app
    restart: always
    ports:
      - 8000:8000
      # - "8001:8000"   # Port mapping for the second replica
      # - "8002:8000"   # Port mapping for the third replica
    networks:
      - my_network
    depends_on:
      - redis
      - postgresql
    # deploy:
    #   replicas: 3  # Set the desired number of replicas
    
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend:/app/frontend
    ports:
      - 3000:3000

  postgresql:
    image: postgres:latest
    environment:
      - POSTGRES_USER=sahal
      - POSTGRES_PASSWORD=09876
      - POSTGRES_DB=Chat
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - my_network
  
  rabbitmq:
    image: rabbitmq:management
    restart: always
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - my_network

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
    - redis_data:/data
    restart: always
    networks:
      - my_network

  worker:
    restart: always
    build: .
    command: /app/worker.sh
    depends_on:
      - redis
      - postgresql
    networks:
      - my_network
      
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend/dist:/var/www/frontend
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    networks:
      - my_network
    depends_on:
      - backend
      - frontend

volumes:
  redis_data:
  frontend:
  postgresql_data: