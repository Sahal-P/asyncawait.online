version: '3'

networks:
  my_network:
    driver: bridge

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    restart: always
    ports:
      - 8000:8000
    networks:
      - my_network
    depends_on:
      - postgresql
      - redis
    

  # frontend:
  #   build: 
  #     context: ./frontend
  #   volumes:
  #     - ./frontend/dist:/frontend/dist

  #   restart: always  
  #   networks:
  #     - my_network
  #   ports:
  #     - 3000:3000

  # nginx:  
  #   image: nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #     - ./frontend/dist:/var/www/frontend
  #   restart: unless-stopped
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     - my_network
  #   depends_on:
  #     - web
  #     - frontend

  postgresql:
    image: postgres:latest
    environment:
      - POSTGRES_USER=sahal
      - POSTGRES_PASSWORD=09876
      - POSTGRES_DB=Chat
    ports:
      - '5432:5432'
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - my_network

  redis:
    image: redis
    ports:
      - '6379:6379'
    networks:
      - my_network

volumes:
  postgresql_data: